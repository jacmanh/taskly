name: Production

on:
  push:
    tags:
      - 'v*'

permissions:
  actions: read
  contents: read

jobs:
  build-and-push:
    name: Push Docker image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v1

      - run: |
          echo "BASE: ${{ steps.setSHAs.outputs.base }}"
          echo "HEAD: ${{ steps.setSHAs.outputs.head }}"

      - name: Detect affected apps
        id: affected
        run: |
          AFFECTED_APPS=$(pnpm exec nx show projects --affected | tr '\n' ' ')
          echo "Affected apps: $AFFECTED_APPS"
          echo "apps=$AFFECTED_APPS" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          for app in $apps; do
            echo "Building and pushing Docker image for $app..."
            pnpm exec nx run $app:docker-build --tag=ghcr.io/${{ github.repository }}-$app:${{ github.ref_name }} --tag=ghcr.io/${{ github.repository }}-$app:latest
            docker push ghcr.io/${{ github.repository }}-$app:${{ github.ref_name }}
            docker push ghcr.io/${{ github.repository }}-$app:latest
          done
          

  deploy:
    name: Deploy to production
    needs: build-and-push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup SSH key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Connect and deploy
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker compose pull api front
            docker compose down api front
            docker compose up api front -d
          EOF
